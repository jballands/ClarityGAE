// Generated by CoffeeScript 1.7.1
(function() {
  var apiCall, dataInitButtons, dataLoadTable, dataParseTable, initialize, root;

  root = this;

  root.dataConfig = {};

  root.dataCurrentModel = '';

  root.dataCurrentQuery = {};

  root.dataCurrentOffset = 0;

  initialize = function() {
    var method;
    $('.load-disable').prop('disabled', true);
    return (apiCall('/static/data/data-config.json', method = 'get')).done(function(data) {
      root.dataConfig = data;
      return dataInitButtons();
    });
  };

  apiCall = function(url, data, method) {
    if (data == null) {
      data = {};
    }
    if (method == null) {
      method = 'post';
    }
    $('.load-disable').prop('disabled', true);
    $('#loader').show();
    return $.ajax({
      'url': url,
      'method': method,
      'contentType': 'application/json; charset=utf-8',
      'dataType': 'json',
      'data': JSON.stringify(data),
      'error': function(xhr, status, error) {
        return bootbox.alert(xhr.responseText || error);
      },
      'complete': function() {
        $('#loader').hide();
        return $('.load-disable').prop('disabled', false);
      }
    });
  };

  dataInitButtons = function() {
    var button, markup, model, modelName, _i, _len, _ref;
    $('#data_buttonRow .btn').remove();
    _ref = root.dataConfig['models'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      model = _ref[_i];
      modelName = root.dataConfig['names'][model];
      markup = "<label class='btn btn-primary load-disable'><input type='radio'>" + modelName + "</label>";
      button = $(markup).appendTo($('#data_buttonRow'));
      button.data('model', model);
      button.click(function() {
        return dataLoadTable($(this).data('model'));
      });
    }
    $('#data_buttonRow .btn').button();
  };

  dataLoadTable = function(model, query, offset) {
    var data, key, request, url, value;
    if (model == null) {
      model = root.dataCurrentModel;
    }
    if (query == null) {
      query = root.dataCurrentQuery;
    }
    if (offset == null) {
      offset = root.dataCurrentOffset;
    }
    root.dataCurrentModel = model;
    url = "/api/" + model + "_query";
    data = {
      'token': session,
      'offset': offset
    };
    for (key in query) {
      value = query[key];
      data[key] = value;
    }
    request = apiCall(url, data);
    return request.done(function(data) {
      return dataParseTable(data);
    });
  };

  dataParseTable = function(data) {
    var model, modelProps, tableBody, tableHead;
    model = root.dataCurrentModel;
    modelProps = root.dataConfig['properties'][model];
    tableHead = $('#data_tableHead');
    tableBody = $('#data_tableBody');
    return tableHead.append('<td>&nbsp;<span class="glyphicon glyphicon-ok"></span>&nbsp;</td>');
  };

  $(initialize);

}).call(this);
